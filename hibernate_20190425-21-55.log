[DEBUG] 2019-04-25 21:55:31.591 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-04-25 21:55:31.595 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-04-25 21:55:31.604 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-04-25 21:55:31.778 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2019-04-25 21:55:31.786 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-04-25 21:55:31.991 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-04-25 21:55:31.991 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-04-25 21:55:31.997 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-04-25 21:55:32.512 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-04-25 21:55:32.555 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-04-25 21:55:32.567 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2019-04-25 21:55:32.646 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@452e19ca
[DEBUG] 2019-04-25 21:55:32.646 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@452e19ca
[DEBUG] 2019-04-25 21:55:32.646 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@452e19ca
[DEBUG] 2019-04-25 21:55:32.648 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e25951c
[DEBUG] 2019-04-25 21:55:32.650 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4b2c5e02
[DEBUG] 2019-04-25 21:55:32.651 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4bc222e
[DEBUG] 2019-04-25 21:55:32.653 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@102cec62
[DEBUG] 2019-04-25 21:55:32.653 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@102cec62
[DEBUG] 2019-04-25 21:55:32.653 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@102cec62
[DEBUG] 2019-04-25 21:55:32.655 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@19b89d4
[DEBUG] 2019-04-25 21:55:32.655 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@19b89d4
[DEBUG] 2019-04-25 21:55:32.655 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@19b89d4
[DEBUG] 2019-04-25 21:55:32.658 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@24c22fe
[DEBUG] 2019-04-25 21:55:32.658 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@24c22fe
[DEBUG] 2019-04-25 21:55:32.659 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24c22fe
[DEBUG] 2019-04-25 21:55:32.664 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@15a04efb
[DEBUG] 2019-04-25 21:55:32.664 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@15a04efb
[DEBUG] 2019-04-25 21:55:32.665 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15a04efb
[DEBUG] 2019-04-25 21:55:32.670 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@205d38da
[DEBUG] 2019-04-25 21:55:32.671 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@205d38da
[DEBUG] 2019-04-25 21:55:32.671 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@205d38da
[DEBUG] 2019-04-25 21:55:32.674 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@39b43d60
[DEBUG] 2019-04-25 21:55:32.674 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@39b43d60
[DEBUG] 2019-04-25 21:55:32.674 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39b43d60
[DEBUG] 2019-04-25 21:55:32.676 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f20155b
[DEBUG] 2019-04-25 21:55:32.677 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f20155b
[DEBUG] 2019-04-25 21:55:32.677 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f20155b
[DEBUG] 2019-04-25 21:55:32.684 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b993c65
[DEBUG] 2019-04-25 21:55:32.685 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b993c65
[DEBUG] 2019-04-25 21:55:32.686 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@407a7f2a
[DEBUG] 2019-04-25 21:55:32.687 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@407a7f2a
[DEBUG] 2019-04-25 21:55:32.688 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:32.688 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:32.690 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4fa1c212
[DEBUG] 2019-04-25 21:55:32.692 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@352ff4da
[DEBUG] 2019-04-25 21:55:32.694 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@295cf707
[DEBUG] 2019-04-25 21:55:32.694 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@295cf707
[DEBUG] 2019-04-25 21:55:32.695 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1b266842
[DEBUG] 2019-04-25 21:55:32.695 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1b266842
[DEBUG] 2019-04-25 21:55:32.713 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7f8a9499
[DEBUG] 2019-04-25 21:55:32.714 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f8a9499
[DEBUG] 2019-04-25 21:55:32.716 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@420a85c4
[DEBUG] 2019-04-25 21:55:32.716 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@420a85c4
[DEBUG] 2019-04-25 21:55:32.718 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@13b3d178
[DEBUG] 2019-04-25 21:55:32.719 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@13b3d178
[DEBUG] 2019-04-25 21:55:32.721 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@766653e6
[DEBUG] 2019-04-25 21:55:32.721 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@766653e6
[DEBUG] 2019-04-25 21:55:32.723 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48c76607
[DEBUG] 2019-04-25 21:55:32.723 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@48c76607
[DEBUG] 2019-04-25 21:55:32.725 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1787bc24
[DEBUG] 2019-04-25 21:55:32.725 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1787bc24
[DEBUG] 2019-04-25 21:55:32.730 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27508c5d
[DEBUG] 2019-04-25 21:55:32.730 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27508c5d
[DEBUG] 2019-04-25 21:55:32.733 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@404bbcbd
[DEBUG] 2019-04-25 21:55:32.733 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@404bbcbd
[DEBUG] 2019-04-25 21:55:32.735 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@a307a8c
[DEBUG] 2019-04-25 21:55:32.735 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a307a8c
[DEBUG] 2019-04-25 21:55:32.736 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@421e361
[DEBUG] 2019-04-25 21:55:32.737 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@421e361
[DEBUG] 2019-04-25 21:55:32.737 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@421e361
[DEBUG] 2019-04-25 21:55:32.741 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fc79729
[DEBUG] 2019-04-25 21:55:32.745 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@14008db3
[DEBUG] 2019-04-25 21:55:32.745 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14008db3
[DEBUG] 2019-04-25 21:55:32.746 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14008db3
[DEBUG] 2019-04-25 21:55:32.748 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@16aa8654
[DEBUG] 2019-04-25 21:55:32.751 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@68034211
[DEBUG] 2019-04-25 21:55:32.751 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@68034211
[DEBUG] 2019-04-25 21:55:32.754 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4167d97b
[DEBUG] 2019-04-25 21:55:32.754 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4167d97b
[DEBUG] 2019-04-25 21:55:32.756 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@57ad2aa7
[DEBUG] 2019-04-25 21:55:32.757 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@57ad2aa7
[DEBUG] 2019-04-25 21:55:32.758 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@275bf9b3
[DEBUG] 2019-04-25 21:55:32.758 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@275bf9b3
[DEBUG] 2019-04-25 21:55:32.761 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c51f34b
[DEBUG] 2019-04-25 21:55:32.762 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c51f34b
[DEBUG] 2019-04-25 21:55:32.763 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61eaec38
[DEBUG] 2019-04-25 21:55:32.765 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@67b9b51a
[DEBUG] 2019-04-25 21:55:32.766 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@67b9b51a
[DEBUG] 2019-04-25 21:55:32.766 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@67b9b51a
[DEBUG] 2019-04-25 21:55:32.768 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c669da8
[DEBUG] 2019-04-25 21:55:32.768 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c669da8
[DEBUG] 2019-04-25 21:55:32.768 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c669da8
[DEBUG] 2019-04-25 21:55:32.771 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@934b6cb
[DEBUG] 2019-04-25 21:55:32.772 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2609b277
[DEBUG] 2019-04-25 21:55:32.773 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3eb81efb
[DEBUG] 2019-04-25 21:55:32.774 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3eb81efb
[DEBUG] 2019-04-25 21:55:32.774 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3eb81efb
[DEBUG] 2019-04-25 21:55:32.775 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cdec700
[DEBUG] 2019-04-25 21:55:32.775 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cdec700
[DEBUG] 2019-04-25 21:55:32.776 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cdec700
[DEBUG] 2019-04-25 21:55:32.777 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4b7dc788
[DEBUG] 2019-04-25 21:55:32.778 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4e31276e
[DEBUG] 2019-04-25 21:55:32.791 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4eaf3684
[DEBUG] 2019-04-25 21:55:32.791 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4eaf3684
[DEBUG] 2019-04-25 21:55:32.792 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45d2ade3
[DEBUG] 2019-04-25 21:55:32.811 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@418c5a9c
[DEBUG] 2019-04-25 21:55:32.812 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@418c5a9c
[DEBUG] 2019-04-25 21:55:32.819 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@258d79be
[DEBUG] 2019-04-25 21:55:32.820 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@258d79be
[DEBUG] 2019-04-25 21:55:32.820 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@176b75f7
[DEBUG] 2019-04-25 21:55:32.821 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e74829
[DEBUG] 2019-04-25 21:55:32.824 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7b8b43c7
[DEBUG] 2019-04-25 21:55:32.829 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@488d1cd7
[DEBUG] 2019-04-25 21:55:32.830 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@488d1cd7
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d278d2b
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d6c53fc
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25f4878b
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e423aa2
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fbdb894
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3081f72c
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3148f668
[DEBUG] 2019-04-25 21:55:32.831 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6e005dc9
[INFO ] 2019-04-25 21:55:32.848 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql:///beacon_test
[INFO ] 2019-04-25 21:55:32.848 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=Norm, password=****}
[INFO ] 2019-04-25 21:55:32.848 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-04-25 21:55:33.147 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-04-25 21:55:33.227 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.25-log
      major : 5
      minor : 7
[DEBUG] 2019-04-25 21:55:33.228 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2019-04-25 21:55:33.228 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2019-04-25 21:55:33.240 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2019-04-25 21:55:33.291 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-04-25 21:55:33.293 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-04-25 21:55:33.415 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-04-25 21:55:33.417 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-04-25 21:55:33.418 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-04-25 21:55:33.419 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-04-25 21:55:33.419 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-04-25 21:55:33.421 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-04-25 21:55:33.422 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-04-25 21:55:33.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-04-25 21:55:33.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-04-25 21:55:33.426 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-04-25 21:55:33.427 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-04-25 21:55:33.427 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-04-25 21:55:33.428 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-04-25 21:55:33.430 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2019-04-25 21:55:33.478 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-04-25 21:55:33.509 [main] AnnotationBinder - Binding entity from annotated class: com.normnondo.entity.BeaconUsers
[DEBUG] 2019-04-25 21:55:33.531 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-04-25 21:55:33.536 [main] EntityBinder - Import with entity name BeaconUsers
[DEBUG] 2019-04-25 21:55:33.539 [main] EntityBinder - Bind entity com.normnondo.entity.BeaconUsers on table beacon_user_test
[DEBUG] 2019-04-25 21:55:33.572 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.575 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-04-25 21:55:33.577 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:id]
[DEBUG] 2019-04-25 21:55:33.581 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-04-25 21:55:33.585 [main] PropertyBinder - Building property id
[DEBUG] 2019-04-25 21:55:33.593 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.593 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-04-25 21:55:33.594 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:email]
[DEBUG] 2019-04-25 21:55:33.594 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-04-25 21:55:33.594 [main] PropertyBinder - Building property email
[DEBUG] 2019-04-25 21:55:33.594 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.594 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-04-25 21:55:33.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:firstName]
[DEBUG] 2019-04-25 21:55:33.595 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-04-25 21:55:33.595 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-04-25 21:55:33.595 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.595 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-04-25 21:55:33.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:lastName]
[DEBUG] 2019-04-25 21:55:33.595 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-04-25 21:55:33.595 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-04-25 21:55:33.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.596 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-04-25 21:55:33.596 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:password]
[DEBUG] 2019-04-25 21:55:33.596 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-04-25 21:55:33.596 [main] PropertyBinder - Building property password
[DEBUG] 2019-04-25 21:55:33.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.597 [main] PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
[DEBUG] 2019-04-25 21:55:33.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:phoneNumber]
[DEBUG] 2019-04-25 21:55:33.597 [main] SimpleValueBinder - building SimpleValue for phoneNumber
[DEBUG] 2019-04-25 21:55:33.597 [main] PropertyBinder - Building property phoneNumber
[DEBUG] 2019-04-25 21:55:33.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(beacon_user_test), mappingColumn=zip_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.597 [main] PropertyBinder - MetadataSourceProcessor property zipCode with lazy=false
[DEBUG] 2019-04-25 21:55:33.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconUsers:zipCode]
[DEBUG] 2019-04-25 21:55:33.597 [main] SimpleValueBinder - building SimpleValue for zipCode
[DEBUG] 2019-04-25 21:55:33.597 [main] PropertyBinder - Building property zipCode
[DEBUG] 2019-04-25 21:55:33.599 [main] AnnotationBinder - Binding entity from annotated class: com.normnondo.entity.BeaconGames
[DEBUG] 2019-04-25 21:55:33.599 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-04-25 21:55:33.599 [main] EntityBinder - Import with entity name BeaconGames
[DEBUG] 2019-04-25 21:55:33.599 [main] EntityBinder - Bind entity com.normnondo.entity.BeaconGames on table games_test
[DEBUG] 2019-04-25 21:55:33.611 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.611 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-04-25 21:55:33.611 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconGames:id]
[DEBUG] 2019-04-25 21:55:33.611 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-04-25 21:55:33.611 [main] PropertyBinder - Building property id
[DEBUG] 2019-04-25 21:55:33.611 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=army, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.612 [main] PropertyBinder - MetadataSourceProcessor property army with lazy=false
[DEBUG] 2019-04-25 21:55:33.612 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconGames:army]
[DEBUG] 2019-04-25 21:55:33.612 [main] SimpleValueBinder - building SimpleValue for army
[DEBUG] 2019-04-25 21:55:33.612 [main] PropertyBinder - Building property army
[DEBUG] 2019-04-25 21:55:33.615 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='beaconUsers_id', referencedColumn='', mappedBy=''}
[DEBUG] 2019-04-25 21:55:33.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=beaconUsers, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.622 [main] PropertyBinder - Building property beaconUsers
[DEBUG] 2019-04-25 21:55:33.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=game_style, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.622 [main] PropertyBinder - MetadataSourceProcessor property gameStyle with lazy=false
[DEBUG] 2019-04-25 21:55:33.622 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconGames:gameStyle]
[DEBUG] 2019-04-25 21:55:33.622 [main] SimpleValueBinder - building SimpleValue for gameStyle
[DEBUG] 2019-04-25 21:55:33.622 [main] PropertyBinder - Building property gameStyle
[DEBUG] 2019-04-25 21:55:33.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=game_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.622 [main] PropertyBinder - MetadataSourceProcessor property gameType with lazy=false
[DEBUG] 2019-04-25 21:55:33.622 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconGames:gameType]
[DEBUG] 2019-04-25 21:55:33.622 [main] SimpleValueBinder - building SimpleValue for gameType
[DEBUG] 2019-04-25 21:55:33.622 [main] PropertyBinder - Building property gameType
[DEBUG] 2019-04-25 21:55:33.623 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=location, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.623 [main] PropertyBinder - MetadataSourceProcessor property location with lazy=false
[DEBUG] 2019-04-25 21:55:33.623 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconGames:location]
[DEBUG] 2019-04-25 21:55:33.623 [main] SimpleValueBinder - building SimpleValue for location
[DEBUG] 2019-04-25 21:55:33.623 [main] PropertyBinder - Building property location
[DEBUG] 2019-04-25 21:55:33.623 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(games_test), mappingColumn=points, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-04-25 21:55:33.623 [main] PropertyBinder - MetadataSourceProcessor property points with lazy=false
[DEBUG] 2019-04-25 21:55:33.623 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.normnondo.entity.BeaconGames:points]
[DEBUG] 2019-04-25 21:55:33.623 [main] SimpleValueBinder - building SimpleValue for points
[DEBUG] 2019-04-25 21:55:33.623 [main] PropertyBinder - Building property points
[DEBUG] 2019-04-25 21:55:33.624 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for phoneNumber
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for zipCode
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for army
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for gameStyle
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for gameType
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for location
[DEBUG] 2019-04-25 21:55:33.625 [main] SimpleValueBinder - Starting fillSimpleValue for points
[DEBUG] 2019-04-25 21:55:33.629 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [beacon_user_test]
[DEBUG] 2019-04-25 21:55:33.629 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [games_test]
[DEBUG] 2019-04-25 21:55:33.630 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.normnondo.entity.BeaconUsers
[DEBUG] 2019-04-25 21:55:33.634 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.normnondo.entity.BeaconUsers
[DEBUG] 2019-04-25 21:55:33.677 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-04-25 21:55:33.678 [main] Settings - SessionFactory name : null
[DEBUG] 2019-04-25 21:55:33.678 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-04-25 21:55:33.678 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-04-25 21:55:33.678 [main] Settings - Statistics: disabled
[DEBUG] 2019-04-25 21:55:33.678 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-04-25 21:55:33.678 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-04-25 21:55:33.679 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-04-25 21:55:33.679 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-04-25 21:55:33.679 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-04-25 21:55:33.679 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-04-25 21:55:33.679 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-04-25 21:55:33.679 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Named query checking : enabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Second-level cache: enabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@591e58fa
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-04-25 21:55:33.680 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-04-25 21:55:33.681 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-04-25 21:55:33.682 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-04-25 21:55:33.755 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-04-25 21:55:33.755 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.3\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.3\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.3\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Users\Nondorf Family\IdeaProjects\beacon\target\test-classes;C:\Users\Nondorf Family\IdeaProjects\beacon\target\classes;C:\Users\Nondorf Family\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Nondorf Family\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Nondorf Family\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Nondorf Family\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Nondorf Family\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Nondorf Family\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Nondorf Family\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Nondorf Family\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\Nondorf Family\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\Nondorf Family\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Nondorf Family\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\Nondorf Family\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Nondorf Family\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\Nondorf Family\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\Nondorf Family\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\Nondorf Family\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Nondorf Family\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\Nondorf Family\.m2\repository\org\hibernate\hibernate-c3p0\5.2.12.Final\hibernate-c3p0-5.2.12.Final.jar;C:\Users\Nondorf Family\.m2\repository\com\mchange\c3p0\0.9.5.2\c3p0-0.9.5.2.jar;C:\Users\Nondorf Family\.m2\repository\com\mchange\mchange-commons-java\0.2.11\mchange-commons-java-0.2.11.jar;C:\Users\Nondorf Family\.m2\repository\mysql\mysql-connector-java\5.1.39\mysql-connector-java-5.1.39.jar;C:\Users\Nondorf Family\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.3.3\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_201\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.normnondo.persistence.BeaconUsersDaoTest, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=C:\Users\Nondorf Family, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_201\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes, user.script=, connection.password=Grotlo88er, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_201-b09, user.name=Nondorf Family, path.separator=;, hibernate.connection.username=Norm, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql:///beacon_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\NONDOR~1\AppData\Local\Temp\, java.version=1.8.0_201, user.dir=C:\Users\Nondorf Family\IdeaProjects\beacon, os.arch=amd64, connection.username=Norm, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5f7f2382, java.library.path=C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath\java.exe;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\HTML_Class\152120_Website_Development\Getting_Started_152-120\jEdit;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk1.8.0_172;C:\Program Files\Java\jdk1.8.0_172\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Git\cmd;C:\Users\Nondorf Family\AppData\Local\Microsoft\WindowsApps;C:\Users\Nondorf Family\AppData\Local\atom\bin;C:\Program Files\heroku\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.201-b09, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql:///beacon_test, java.class.version=52.0}
[DEBUG] 2019-04-25 21:55:33.789 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-04-25 21:55:33.789 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-04-25 21:55:33.790 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-04-25 21:55:33.854 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.normnondo.entity.BeaconGames] is safe
[DEBUG] 2019-04-25 21:55:33.854 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.normnondo.entity.BeaconGames
[DEBUG] 2019-04-25 21:55:33.877 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.normnondo.entity.BeaconGames] is safe
[DEBUG] 2019-04-25 21:55:33.877 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.normnondo.entity.BeaconGames
[DEBUG] 2019-04-25 21:55:33.977 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.normnondo.entity.BeaconUsers] is safe
[DEBUG] 2019-04-25 21:55:33.977 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.normnondo.entity.BeaconUsers
[DEBUG] 2019-04-25 21:55:33.979 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.normnondo.entity.BeaconUsers] is safe
[DEBUG] 2019-04-25 21:55:33.979 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.normnondo.entity.BeaconUsers
[DEBUG] 2019-04-25 21:55:34.006 [main] AbstractEntityPersister - Static SQL for entity: com.normnondo.entity.BeaconGames
[DEBUG] 2019-04-25 21:55:34.006 [main] AbstractEntityPersister -  Version select: select id from games_test where id =?
[DEBUG] 2019-04-25 21:55:34.007 [main] AbstractEntityPersister -  Snapshot select: select beacongame_.id, beacongame_.army as army2_1_, beacongame_.beaconUsers_id as beaconUs7_1_, beacongame_.game_style as game_sty3_1_, beacongame_.game_type as game_typ4_1_, beacongame_.location as location5_1_, beacongame_.points as points6_1_ from games_test beacongame_ where beacongame_.id=?
[DEBUG] 2019-04-25 21:55:34.007 [main] AbstractEntityPersister -  Insert 0: insert into games_test (army, beaconUsers_id, game_style, game_type, location, points, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-04-25 21:55:34.007 [main] AbstractEntityPersister -  Update 0: update games_test set army=?, beaconUsers_id=?, game_style=?, game_type=?, location=?, points=? where id=?
[DEBUG] 2019-04-25 21:55:34.007 [main] AbstractEntityPersister -  Delete 0: delete from games_test where id=?
[DEBUG] 2019-04-25 21:55:34.007 [main] AbstractEntityPersister -  Identity insert: insert into games_test (army, beaconUsers_id, game_style, game_type, location, points) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2019-04-25 21:55:34.046 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79c5636f]
[DEBUG] 2019-04-25 21:55:34.049 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.050 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.059 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42561fba]
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.email
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.firstName
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.lastName
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.password
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.phoneNumber
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.zipCode
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.061 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.062 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.062 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.062 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.091 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.101 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(beaconUsers)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.normnondo.entity.BeaconUsers)
                - SQL table alias mapping - beaconuser1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-04-25 21:55:34.115 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [NONE]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_, beaconuser1_.id as id1_0_1_, beaconuser1_.email as email2_0_1_, beaconuser1_.first_name as first_na3_0_1_, beaconuser1_.last_name as last_nam4_0_1_, beaconuser1_.password as password5_0_1_, beaconuser1_.phone_number as phone_nu6_0_1_, beaconuser1_.zip_code as zip_code7_0_1_ from games_test beacongame0_ inner join beacon_user_test beaconuser1_ on beacongame0_.beaconUsers_id=beaconuser1_.id where beacongame0_.id=?
[DEBUG] 2019-04-25 21:55:34.115 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d6d0c]
[DEBUG] 2019-04-25 21:55:34.115 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.115 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.116 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3961a41a]
[DEBUG] 2019-04-25 21:55:34.116 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.email
[DEBUG] 2019-04-25 21:55:34.116 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.firstName
[DEBUG] 2019-04-25 21:55:34.116 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.lastName
[DEBUG] 2019-04-25 21:55:34.116 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.password
[DEBUG] 2019-04-25 21:55:34.117 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.phoneNumber
[DEBUG] 2019-04-25 21:55:34.117 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers.zipCode
[DEBUG] 2019-04-25 21:55:34.117 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.117 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.117 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.117 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.117 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.117 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.118 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(beaconUsers)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.normnondo.entity.BeaconUsers)
                - SQL table alias mapping - beaconuser1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-04-25 21:55:34.118 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [READ]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_, beaconuser1_.id as id1_0_1_, beaconuser1_.email as email2_0_1_, beaconuser1_.first_name as first_na3_0_1_, beaconuser1_.last_name as last_nam4_0_1_, beaconuser1_.password as password5_0_1_, beaconuser1_.phone_number as phone_nu6_0_1_, beaconuser1_.zip_code as zip_code7_0_1_ from games_test beacongame0_ inner join beacon_user_test beaconuser1_ on beacongame0_.beaconUsers_id=beaconuser1_.id where beacongame0_.id=?
[DEBUG] 2019-04-25 21:55:34.119 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367795c7]
[DEBUG] 2019-04-25 21:55:34.119 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.119 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.119 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3956b302]
[DEBUG] 2019-04-25 21:55:34.119 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.119 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.119 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.119 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.119 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.119 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.120 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.120 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [UPGRADE]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.120 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1500e009]
[DEBUG] 2019-04-25 21:55:34.120 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.120 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.120 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@edf4f36]
[DEBUG] 2019-04-25 21:55:34.120 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.120 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.120 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.121 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.121 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.121 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.122 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.122 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [UPGRADE_NOWAIT]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29d334c]
[DEBUG] 2019-04-25 21:55:34.123 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.123 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.123 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e9f2e2]
[DEBUG] 2019-04-25 21:55:34.123 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.123 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.123 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.123 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.123 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.125 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.126 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.127 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [UPGRADE_SKIPLOCKED]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@673bb956]
[DEBUG] 2019-04-25 21:55:34.127 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.127 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e949e1]
[DEBUG] 2019-04-25 21:55:34.127 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.127 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.127 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.127 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.127 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.128 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.128 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.130 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [FORCE]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c4bc9fc]
[DEBUG] 2019-04-25 21:55:34.134 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.155 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.162 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3569edd5]
[DEBUG] 2019-04-25 21:55:34.163 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.163 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.163 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.163 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.164 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.165 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.166 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.166 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [PESSIMISTIC_READ]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? lock in share mode
[DEBUG] 2019-04-25 21:55:34.167 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f651cd8]
[DEBUG] 2019-04-25 21:55:34.167 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.167 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.167 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a356a0d]
[DEBUG] 2019-04-25 21:55:34.167 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.167 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.167 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.168 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.168 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.168 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.170 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.170 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [PESSIMISTIC_WRITE]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c827db]
[DEBUG] 2019-04-25 21:55:34.171 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.171 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.171 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538cd0f2]
[DEBUG] 2019-04-25 21:55:34.171 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.171 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.171 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.171 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.172 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.172 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.174 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.174 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [PESSIMISTIC_FORCE_INCREMENT]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@238ad8c]
[DEBUG] 2019-04-25 21:55:34.174 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.174 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1761de10]
[DEBUG] 2019-04-25 21:55:34.174 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.174 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.174 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.174 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.174 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.175 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.175 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.175 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [OPTIMISTIC]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=?
[DEBUG] 2019-04-25 21:55:34.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22df874e]
[DEBUG] 2019-04-25 21:55:34.175 [main] MetamodelGraphWalker - Visiting attribute path : army
[DEBUG] 2019-04-25 21:55:34.175 [main] MetamodelGraphWalker - Visiting attribute path : beaconUsers
[DEBUG] 2019-04-25 21:55:34.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bdaf2ce]
[DEBUG] 2019-04-25 21:55:34.175 [main] MetamodelGraphWalker - Visiting attribute path : gameStyle
[DEBUG] 2019-04-25 21:55:34.175 [main] MetamodelGraphWalker - Visiting attribute path : gameType
[DEBUG] 2019-04-25 21:55:34.175 [main] MetamodelGraphWalker - Visiting attribute path : location
[DEBUG] 2019-04-25 21:55:34.175 [main] MetamodelGraphWalker - Visiting attribute path : points
[DEBUG] 2019-04-25 21:55:34.176 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.176 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.176 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconGames)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconGames, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconGames)
          - EntityAttributeFetchImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:1>, path=com.normnondo.entity.BeaconGames.beaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconGames)
          - SQL table alias mapping - beacongame0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2019-04-25 21:55:34.178 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconGames [OPTIMISTIC_FORCE_INCREMENT]: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=?
[DEBUG] 2019-04-25 21:55:34.220 [main] Loader - Static select for action ACTION_MERGE on entity com.normnondo.entity.BeaconGames: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=?
[DEBUG] 2019-04-25 21:55:34.220 [main] Loader - Static select for action ACTION_REFRESH on entity com.normnondo.entity.BeaconGames: select beacongame0_.id as id1_1_0_, beacongame0_.army as army2_1_0_, beacongame0_.beaconUsers_id as beaconUs7_1_0_, beacongame0_.game_style as game_sty3_1_0_, beacongame0_.game_type as game_typ4_1_0_, beacongame0_.location as location5_1_0_, beacongame0_.points as points6_1_0_ from games_test beacongame0_ where beacongame0_.id=?
[DEBUG] 2019-04-25 21:55:34.220 [main] AbstractEntityPersister - Static SQL for entity: com.normnondo.entity.BeaconUsers
[DEBUG] 2019-04-25 21:55:34.220 [main] AbstractEntityPersister -  Version select: select id from beacon_user_test where id =?
[DEBUG] 2019-04-25 21:55:34.220 [main] AbstractEntityPersister -  Snapshot select: select beaconuser_.id, beaconuser_.email as email2_0_, beaconuser_.first_name as first_na3_0_, beaconuser_.last_name as last_nam4_0_, beaconuser_.password as password5_0_, beaconuser_.phone_number as phone_nu6_0_, beaconuser_.zip_code as zip_code7_0_ from beacon_user_test beaconuser_ where beaconuser_.id=?
[DEBUG] 2019-04-25 21:55:34.220 [main] AbstractEntityPersister -  Insert 0: insert into beacon_user_test (email, first_name, last_name, password, phone_number, zip_code, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-04-25 21:55:34.220 [main] AbstractEntityPersister -  Update 0: update beacon_user_test set email=?, first_name=?, last_name=?, password=?, phone_number=?, zip_code=? where id=?
[DEBUG] 2019-04-25 21:55:34.221 [main] AbstractEntityPersister -  Delete 0: delete from beacon_user_test where id=?
[DEBUG] 2019-04-25 21:55:34.221 [main] AbstractEntityPersister -  Identity insert: insert into beacon_user_test (email, first_name, last_name, password, phone_number, zip_code) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2019-04-25 21:55:34.221 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511816c0]
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.221 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.221 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.221 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.221 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [NONE]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.221 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5339bbad]
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.221 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.222 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.222 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.222 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.222 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [READ]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.222 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288a4658]
[DEBUG] 2019-04-25 21:55:34.222 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.223 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.223 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.223 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.223 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.223 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.223 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.223 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.223 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.223 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [UPGRADE]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@452c8a40]
[DEBUG] 2019-04-25 21:55:34.224 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.224 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.224 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.224 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.224 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.224 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.224 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.224 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.224 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.224 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [UPGRADE_NOWAIT]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.225 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29006752]
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.225 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.225 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.225 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.225 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [UPGRADE_SKIPLOCKED]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.225 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66d57c1b]
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.225 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.226 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.226 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.226 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.226 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [FORCE]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.226 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d59970a]
[DEBUG] 2019-04-25 21:55:34.226 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.226 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.226 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.226 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.226 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.226 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.226 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.227 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.227 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.227 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [PESSIMISTIC_READ]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? lock in share mode
[DEBUG] 2019-04-25 21:55:34.227 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b98ff6]
[DEBUG] 2019-04-25 21:55:34.227 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.227 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.227 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.227 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.227 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.227 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.227 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.228 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.228 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.228 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [PESSIMISTIC_WRITE]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.228 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fcff1b9]
[DEBUG] 2019-04-25 21:55:34.228 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.228 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.228 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.228 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.228 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.228 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.229 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.229 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.229 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.229 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [PESSIMISTIC_FORCE_INCREMENT]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=? for update
[DEBUG] 2019-04-25 21:55:34.229 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76adb233]
[DEBUG] 2019-04-25 21:55:34.229 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.229 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.229 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.229 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.229 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.229 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.230 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.230 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.230 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.230 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [OPTIMISTIC]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.230 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36453307]
[DEBUG] 2019-04-25 21:55:34.230 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-04-25 21:55:34.230 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-04-25 21:55:34.230 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-04-25 21:55:34.231 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-04-25 21:55:34.231 [main] MetamodelGraphWalker - Visiting attribute path : phoneNumber
[DEBUG] 2019-04-25 21:55:34.231 [main] MetamodelGraphWalker - Visiting attribute path : zipCode
[DEBUG] 2019-04-25 21:55:34.231 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-04-25 21:55:34.231 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-04-25 21:55:34.231 [main] LoadPlanTreePrinter - LoadPlan(entity=com.normnondo.entity.BeaconUsers)
    - Returns
       - EntityReturnImpl(entity=com.normnondo.entity.BeaconUsers, querySpaceUid=<gen:0>, path=com.normnondo.entity.BeaconUsers)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.normnondo.entity.BeaconUsers)
          - SQL table alias mapping - beaconuser0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2019-04-25 21:55:34.232 [main] EntityLoader - Static select for entity com.normnondo.entity.BeaconUsers [OPTIMISTIC_FORCE_INCREMENT]: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.232 [main] Loader - Static select for action ACTION_MERGE on entity com.normnondo.entity.BeaconUsers: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.232 [main] Loader - Static select for action ACTION_REFRESH on entity com.normnondo.entity.BeaconUsers: select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.269 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-04-25 21:55:34.269 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-04-25 21:55:34.270 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-04-25 21:55:34.277 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-04-25 21:55:34.281 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-04-25 21:55:34.281 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-04-25 21:55:34.285 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4248ed58
[DEBUG] 2019-04-25 21:55:34.287 [main] SessionFactoryRegistry - Registering SessionFactory: 384904e0-e9cd-413d-8b13-921dabb80282 (<unnamed>)
[DEBUG] 2019-04-25 21:55:34.287 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-04-25 21:55:34.413 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-04-25 21:55:34.436 [main] SQL - select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.464 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-04-25 21:55:34.464 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.normnondo.entity.BeaconUsers#3
[DEBUG] 2019-04-25 21:55:34.464 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:34.469 [main] TransactionImpl - begin
[DEBUG] 2019-04-25 21:55:34.500 [main] SQL - select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:34.502 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-04-25 21:55:34.502 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.normnondo.entity.BeaconUsers#2
[DEBUG] 2019-04-25 21:55:34.502 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:34.573 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.phoneNumber=5551234
[DEBUG] 2019-04-25 21:55:34.641 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6ceb7b5e
[INFO ] 2019-04-25 21:55:34.641 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2019-04-25 21:55:34.693 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.phoneNumber=5551234
[DEBUG] 2019-04-25 21:55:34.700 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:34.702 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'normnondo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'BeaconUsers'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'phoneNumber'
          \-[NUM_INT] Node: '5551234'

[DEBUG] 2019-04-25 21:55:34.738 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:34.755 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:34.757 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:34.764 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:34.766 [main] DotNode - getDataType() : phoneNumber -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:34.768 [main] FromReferenceNode - Resolved : generatedAlias0.phoneNumber -> beaconuser0_.phone_number
[DEBUG] 2019-04-25 21:55:34.773 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:34.773 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) ( where ( = ( beaconuser0_.phone_number beaconuser0_.id phoneNumber ) 5551234 ) ) )
[DEBUG] 2019-04-25 21:55:34.788 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:34.788 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:34.788 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'beaconuser0_.phone_number' {propertyName=phoneNumber,dereferenceType=PRIMITIVE,getPropertyPath=phoneNumber,path=generatedAlias0.phoneNumber,tableAlias=beaconuser0_,className=com.normnondo.entity.BeaconUsers,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
          |  \-[IDENT] IdentNode: 'phoneNumber' {originalText=phoneNumber}
          \-[NUM_INT] LiteralNode: '5551234'

[DEBUG] 2019-04-25 21:55:34.788 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:34.803 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.phoneNumber=5551234
[DEBUG] 2019-04-25 21:55:34.803 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.phone_number=5551234
[DEBUG] 2019-04-25 21:55:34.803 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:34.832 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.phone_number=5551234
[DEBUG] 2019-04-25 21:55:34.836 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:34.853 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.zipCode=53718
[DEBUG] 2019-04-25 21:55:34.853 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.zipCode=53718
[DEBUG] 2019-04-25 21:55:34.854 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:34.855 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'normnondo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'BeaconUsers'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'zipCode'
          \-[NUM_INT] Node: '53718'

[DEBUG] 2019-04-25 21:55:34.855 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:34.856 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:34.856 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:34.857 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:34.857 [main] DotNode - getDataType() : zipCode -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:34.857 [main] FromReferenceNode - Resolved : generatedAlias0.zipCode -> beaconuser0_.zip_code
[DEBUG] 2019-04-25 21:55:34.857 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:34.857 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) ( where ( = ( beaconuser0_.zip_code beaconuser0_.id zipCode ) 53718 ) ) )
[DEBUG] 2019-04-25 21:55:34.857 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:34.857 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:34.857 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'beaconuser0_.zip_code' {propertyName=zipCode,dereferenceType=PRIMITIVE,getPropertyPath=zipCode,path=generatedAlias0.zipCode,tableAlias=beaconuser0_,className=com.normnondo.entity.BeaconUsers,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
          |  \-[IDENT] IdentNode: 'zipCode' {originalText=zipCode}
          \-[NUM_INT] LiteralNode: '53718'

[DEBUG] 2019-04-25 21:55:34.858 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:34.858 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.zipCode=53718
[DEBUG] 2019-04-25 21:55:34.858 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.zip_code=53718
[DEBUG] 2019-04-25 21:55:34.858 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:34.858 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.zip_code=53718
[DEBUG] 2019-04-25 21:55:34.863 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.002 [main] SQL - select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:35.009 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-04-25 21:55:35.013 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.normnondo.entity.BeaconUsers#4
[DEBUG] 2019-04-25 21:55:35.013 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.042 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2019-04-25 21:55:35.044 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2019-04-25 21:55:35.045 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.047 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'normnondo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'BeaconUsers'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-04-25 21:55:35.051 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.056 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:35.057 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.057 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.057 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:35.057 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> beaconuser0_.last_name
[DEBUG] 2019-04-25 21:55:35.059 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.059 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) ( where ( = ( beaconuser0_.last_name beaconuser0_.id lastName ) ? ) ) )
[DEBUG] 2019-04-25 21:55:35.062 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:35.063 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.064 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'beaconuser0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=beaconuser0_,className=com.normnondo.entity.BeaconUsers,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4f4c4b1a}

[DEBUG] 2019-04-25 21:55:35.064 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.065 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2019-04-25 21:55:35.065 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.last_name=?
[DEBUG] 2019-04-25 21:55:35.065 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.071 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.last_name=?
[DEBUG] 2019-04-25 21:55:35.076 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.109 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.email like :param0
[DEBUG] 2019-04-25 21:55:35.110 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.email like :param0
[DEBUG] 2019-04-25 21:55:35.112 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.115 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'normnondo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'BeaconUsers'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-04-25 21:55:35.115 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.116 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:35.116 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.116 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.116 [main] DotNode - getDataType() : email -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:35.116 [main] FromReferenceNode - Resolved : generatedAlias0.email -> beaconuser0_.email
[DEBUG] 2019-04-25 21:55:35.117 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.117 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) ( where ( like ( beaconuser0_.email beaconuser0_.id email ) ? ) ) )
[DEBUG] 2019-04-25 21:55:35.117 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:35.117 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.117 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'beaconuser0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=beaconuser0_,className=com.normnondo.entity.BeaconUsers,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4f4c4b1a}

[DEBUG] 2019-04-25 21:55:35.117 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.117 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.email like :param0
[DEBUG] 2019-04-25 21:55:35.117 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.email like ?
[DEBUG] 2019-04-25 21:55:35.117 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.118 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.email like ?
[DEBUG] 2019-04-25 21:55:35.120 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.134 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2019-04-25 21:55:35.135 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2019-04-25 21:55:35.135 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.136 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'normnondo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'BeaconUsers'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-04-25 21:55:35.136 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.136 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:35.136 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.137 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.137 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:35.137 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> beaconuser0_.last_name
[DEBUG] 2019-04-25 21:55:35.137 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.137 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) ( where ( like ( beaconuser0_.last_name beaconuser0_.id lastName ) ? ) ) )
[DEBUG] 2019-04-25 21:55:35.137 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:35.137 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.137 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'beaconuser0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=beaconuser0_,className=com.normnondo.entity.BeaconUsers,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4f4c4b1a}

[DEBUG] 2019-04-25 21:55:35.138 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.138 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2019-04-25 21:55:35.138 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.last_name like ?
[DEBUG] 2019-04-25 21:55:35.138 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.138 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.last_name like ?
[DEBUG] 2019-04-25 21:55:35.140 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.163 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2019-04-25 21:55:35.164 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.last_name like ?
[DEBUG] 2019-04-25 21:55:35.165 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.181 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2019-04-25 21:55:35.181 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2019-04-25 21:55:35.182 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.182 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'normnondo'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'BeaconUsers'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-04-25 21:55:35.183 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.183 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:35.183 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.184 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.184 [main] DotNode - getDataType() : firstName -> org.hibernate.type.StringType@4f4c4b1a
[DEBUG] 2019-04-25 21:55:35.184 [main] FromReferenceNode - Resolved : generatedAlias0.firstName -> beaconuser0_.first_name
[DEBUG] 2019-04-25 21:55:35.184 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.184 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) ( where ( like ( beaconuser0_.first_name beaconuser0_.id firstName ) ? ) ) )
[DEBUG] 2019-04-25 21:55:35.184 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:35.184 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.184 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'beaconuser0_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=generatedAlias0.firstName,tableAlias=beaconuser0_,className=com.normnondo.entity.BeaconUsers,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4f4c4b1a}

[DEBUG] 2019-04-25 21:55:35.184 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.185 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0 where generatedAlias0.firstName like :param0
[DEBUG] 2019-04-25 21:55:35.185 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.first_name like ?
[DEBUG] 2019-04-25 21:55:35.185 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.185 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_ where beaconuser0_.first_name like ?
[DEBUG] 2019-04-25 21:55:35.187 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.206 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from BeaconUsers as generatedAlias0
[DEBUG] 2019-04-25 21:55:35.207 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0
[DEBUG] 2019-04-25 21:55:35.208 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.209 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'normnondo'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'BeaconUsers'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-04-25 21:55:35.209 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.210 [main] FromElement - FromClause{level=1} : com.normnondo.entity.BeaconUsers (generatedAlias0) -> beaconuser0_
[DEBUG] 2019-04-25 21:55:35.210 [main] FromReferenceNode - Resolved : generatedAlias0 -> beaconuser0_.id
[DEBUG] 2019-04-25 21:55:35.211 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.211 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} beaconuser0_.id ) ( FromClause{level=1} beacon_user_test beaconuser0_ ) )
[DEBUG] 2019-04-25 21:55:35.212 [main] JoinProcessor - Using FROM fragment [beacon_user_test beaconuser0_]
[DEBUG] 2019-04-25 21:55:35.213 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-04-25 21:55:35.213 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (beacon_user_test)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'beaconuser0_.id as id1_0_' {alias=generatedAlias0, className=com.normnondo.entity.BeaconUsers, tableAlias=beaconuser0_}
    |  \-[SQL_TOKEN] SqlFragment: 'beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[beaconuser0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'beacon_user_test beaconuser0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=beacon_user_test,tableAlias=beaconuser0_,origin=null,columns={,className=com.normnondo.entity.BeaconUsers}}

[DEBUG] 2019-04-25 21:55:35.214 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.215 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.normnondo.entity.BeaconUsers as generatedAlias0
[DEBUG] 2019-04-25 21:55:35.215 [main] QueryTranslatorImpl - SQL: select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_
[DEBUG] 2019-04-25 21:55:35.215 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2019-04-25 21:55:35.216 [main] SQL - select beaconuser0_.id as id1_0_, beaconuser0_.email as email2_0_, beaconuser0_.first_name as first_na3_0_, beaconuser0_.last_name as last_nam4_0_, beaconuser0_.password as password5_0_, beaconuser0_.phone_number as phone_nu6_0_, beaconuser0_.zip_code as zip_code7_0_ from beacon_user_test beaconuser0_
[DEBUG] 2019-04-25 21:55:35.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.229 [main] TransactionImpl - begin
[DEBUG] 2019-04-25 21:55:35.265 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-04-25 21:55:35.267 [main] SQL - insert into beacon_user_test (email, first_name, last_name, password, phone_number, zip_code) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2019-04-25 21:55:35.271 [main] IdentifierGeneratorHelper - Natively generated identity: 65
[DEBUG] 2019-04-25 21:55:35.271 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-04-25 21:55:35.273 [main] TransactionImpl - committing
[DEBUG] 2019-04-25 21:55:35.274 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-04-25 21:55:35.277 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-04-25 21:55:35.281 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-04-25 21:55:35.282 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-04-25 21:55:35.284 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-04-25 21:55:35.284 [main] EntityPrinter - com.normnondo.entity.BeaconUsers{firstName=Fred, lastName=Flintstone, zipCode=53588, password=taco, phoneNumber=5559876, id=65, email=fflint@yahoo.com}
[DEBUG] 2019-04-25 21:55:35.287 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.287 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-04-25 21:55:35.289 [main] SQL - select beaconuser0_.id as id1_0_0_, beaconuser0_.email as email2_0_0_, beaconuser0_.first_name as first_na3_0_0_, beaconuser0_.last_name as last_nam4_0_0_, beaconuser0_.password as password5_0_0_, beaconuser0_.phone_number as phone_nu6_0_0_, beaconuser0_.zip_code as zip_code7_0_0_ from beacon_user_test beaconuser0_ where beaconuser0_.id=?
[DEBUG] 2019-04-25 21:55:35.290 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-04-25 21:55:35.291 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-04-25 21:55:35.295 [main] TwoPhaseLoad - Resolving associations for [com.normnondo.entity.BeaconUsers#65]
[DEBUG] 2019-04-25 21:55:35.295 [main] TwoPhaseLoad - Done materializing entity [com.normnondo.entity.BeaconUsers#65]
[DEBUG] 2019-04-25 21:55:35.295 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-04-25 21:55:35.295 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.normnondo.entity.BeaconUsers#65
[DEBUG] 2019-04-25 21:55:35.296 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
